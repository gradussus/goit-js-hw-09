{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,SACzCA,MArBPL,EAAKa,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,IAAIV,EAAQW,OAAOhB,EAAKK,MAAMY,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOhB,EAAKmB,OAAOF,OAAQC,GAAK,EACnDf,EAAce,EAAGb,GACde,MAAKC,GAAUC,EAAAxB,GAASyB,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAxB,GAASyB,OAAOI,QAAQD,KAC1CrB,GAASW,OAAOhB,EAAK4B,KAAKX","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let delay = Number(form.delay.value);\n\n  for (let i = 1; i <= Number(form.amount.value); i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    delay += Number(form.step.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","i","amount","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","step"],"version":3,"file":"03-promises.3999305c.js.map"}