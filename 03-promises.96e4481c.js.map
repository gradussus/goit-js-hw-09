{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SACjDA,MArBPL,EAAKc,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAIF,IAFA,IAAIX,EAAQY,OAAOjB,EAAKK,MAAMa,OAErBC,EAAI,EAAGA,GAAKF,OAAOjB,EAAKoB,OAAOF,OAAQC,GAAK,EACnDhB,EAAcgB,EAAGd,GACdgB,MAAK,SAAAC,G,OAAUC,EAAAzB,GAAS0B,OAAOC,QAAQH,MACvCI,OAAM,SAAAC,G,OAASJ,EAAAzB,GAAS0B,OAAOI,QAAQD,MAC1CtB,GAASY,OAAOjB,EAAK6B,KAAKX,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let delay = Number(form.delay.value);\n\n  for (let i = 1; i <= Number(form.amount.value); i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    delay += Number(form.step.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","Number","value","i","amount","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","step"],"version":3,"file":"03-promises.96e4481c.js.map"}